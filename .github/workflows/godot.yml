name: "godot-ci export"
on: 
  push: 
    branches: 
      - "main"

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: OneMillionMicroscopicKittens
  # Set up these as Github Secrets:
  ITCHIO_API_KEY: ${{ secrets.ITCHIO_API_KEY }}
  ITCHIO_USERNAME: ${{ secrets.ITCHIO_USERNAME }}
  ITCHIO_GAME: ${{ secrets.ITCHIO_GAME }}
  LOG: 2>&1 | tee -a build.log


jobs:
  deploy:
    timeout-minutes: 5
    name: Godot Export
    runs-on: ubuntu-20.04
    container:
      image: docker://barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with: 
          lfs: 'true'
        
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Run the bsp unfucker that also reimport any borked stuff
        run: |
          git config --global --add safe.directory '*' # workaround for 'fatal: detected dubious ownership in repository'
          bash fixbsp.sh $LOG

      - name: Web Build
        run: |
            mkdir -v -p build/web
            godot --headless -v --export-release "Web" build/web/index.html $LOG

      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          godot --headless --verbose --export-release "MacOS" build/mac/$EXPORT_NAME.zip $LOG

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot --headless --verbose --export-release "Windows Desktop" build/windows/$EXPORT_NAME.zip $LOG

      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot --headless --verbose --export-release "Linux" build/linux/$EXPORT_NAME.zip $LOG

      - name: Upload Artifact web
        uses: actions/upload-artifact@v4
        with:
          name: Web
          path: ./build/web/

      - name: Upload Artifact Windows
        uses: actions/upload-artifact@v4
        with:
          name: Windows
          path: ./build/windows/

      - name: Upload Artifact MacOS
        uses: actions/upload-artifact@v4
        with:
          name: MacOS
          path: ./build/mac/

      - name: Upload Artifact Linux
        uses: actions/upload-artifact@v4
        with:
          name: Linux
          path: ./build/linux/
  
      - name: Itch.io web
        run: BUTLER_API_KEY=${ITCHIO_API_KEY} butler push ./build/web ${ITCHIO_USERNAME}/${ITCHIO_GAME}:web

      - name: Itch.io MacOS
        run: BUTLER_API_KEY=${ITCHIO_API_KEY} butler push ./build/mac/$EXPORT_NAME.zip ${ITCHIO_USERNAME}/${ITCHIO_GAME}:mac

      - name: Itch.io Windows
        run: BUTLER_API_KEY=${ITCHIO_API_KEY} butler push ./build/windows/$EXPORT_NAME.zip ${ITCHIO_USERNAME}/${ITCHIO_GAME}:windows

      - name: Itch.io Linux
        run: BUTLER_API_KEY=${ITCHIO_API_KEY} butler push ./build/linux/$EXPORT_NAME.zip ${ITCHIO_USERNAME}/${ITCHIO_GAME}:linux

      - name: Notify Discord of failure
        if: failure()
        run: |
          run_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          commit_url="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
          msg="There was a problem with the build for $commit_url."
          embeds="[{\"title\": \"Build Failed\", \"description\": \"See details here: ${run_url}\", \"url\": \"${run_url}\", \"color\": 10038562}]"
          data="{\"content\": \"$msg\", \"username\": \"Buildbot\", \"embeds\": $embeds}"
          curl -X POST -H 'Content-Type: application/json' --data "$data" "${{ secrets.DISCORD_WEBHOOK_URL }}"
      
      - name: Grep log for errors and send to discord
        if: always()
        continue-on-error: true
        run: |
          ERRORS=$(grep "ERROR" build.log | sort -u)
          if [ -n "$ERRORS" ]; then
            run_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            commit_url="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
            msg="The build succeeded, but Godot printed $count errors suring export.\n\n$ERRORS"
            embeds="[{\"title\": \"Build error report\", \"description\": \"See details here: ${run_url}\", \"url\": \"${run_url}\", \"color\": 10038562}]"
            data="{\"content\": \"$msg\", \"username\": \"Buildbot\", \"embeds\": $embeds}"
            curl -X POST -H 'Content-Type: application/json' --data "$data" "${{ secrets.DISCORD_WEBHOOK_URL }}"
          fi
